# Generated by Django 4.2.7 on 2025-09-21 16:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.CharField(help_text='Unique doctor identifier', max_length=20, unique=True)),
                ('medical_license_number', models.CharField(max_length=50, unique=True)),
                ('qualification', models.CharField(choices=[('MBBS', 'MBBS'), ('MD', 'MD'), ('MS', 'MS'), ('DM', 'DM'), ('MCh', 'MCh'), ('DNB', 'DNB'), ('FRCS', 'FRCS'), ('Other', 'Other')], default='MBBS', max_length=20)),
                ('years_of_experience', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('hospital_affiliation', models.CharField(blank=True, max_length=200)),
                ('clinic_address', models.TextField(blank=True)),
                ('consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bio', models.TextField(blank=True, help_text='Professional biography')),
                ('available_days', models.CharField(default='Monday,Tuesday,Wednesday,Thursday,Friday', help_text='Comma-separated days (Monday,Tuesday,etc.)', max_length=50)),
                ('start_time', models.TimeField(default='09:00')),
                ('end_time', models.TimeField(default='17:00')),
                ('consultation_duration', models.PositiveIntegerField(default=30, help_text='Duration in minutes')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_available_for_appointments', models.BooleanField(default=True)),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('total_ratings', models.PositiveIntegerField(default=0)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-joined_date'],
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DoctorExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100)),
                ('hospital_or_clinic', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave empty if current position', null=True)),
                ('responsibilities', models.TextField(blank=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experience', to='doctors.doctor')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='DoctorEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=200)),
                ('year_of_completion', models.PositiveIntegerField()),
                ('grade_or_percentage', models.CharField(blank=True, max_length=20)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='doctors.doctor')),
            ],
            options={
                'ordering': ['-year_of_completion'],
            },
        ),
        migrations.AddField(
            model_name='doctor',
            name='specializations',
            field=models.ManyToManyField(related_name='doctors', to='doctors.specialization'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DoctorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('availability_type', models.CharField(choices=[('available', 'Available'), ('unavailable', 'Unavailable'), ('holiday', 'Holiday'), ('conference', 'Conference'), ('emergency', 'Emergency')], max_length=20)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_schedule', to='doctors.doctor')),
            ],
            options={
                'ordering': ['date', 'start_time'],
                'unique_together': {('doctor', 'date', 'start_time')},
            },
        ),
    ]
